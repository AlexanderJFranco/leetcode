class Solution {
public:
    int findRadius(vector<int>& houses, vector<int>& heaters) {
        int closeStart =heaters[0];

        int closeEnd =houses[houses.size()-1] - heaters[heaters.size()-1]  ;
        
        int largest=0;
        int hold = heaters[0];
        if(houses.size()==1)
            return 0;
        if(houses==heaters)
            return 0;
        if(heaters.size()>1){
        for(int i=0; i<heaters.size()-1;i++){
            if(heaters[i+1]-heaters[i]>largest){
                largest=heaters[i+1]-heaters[i];
            }
        }

        double dist = largest/2;
        dist = ceil(dist);
        if(dist>=closeStart&&dist>=closeEnd){
         if(heaters[heaters.size()-1] > houses[houses.size()-1])
                return dist-1;
        else
            return dist;
        }//if
        else if(closeStart>dist&&closeStart>closeEnd){
            return closeStart-1;
        }
        else if(closeEnd>dist&&closeEnd>closeStart){
            return closeEnd;
        }
    }
    else if (heaters.size()==1){
        closeStart = heaters[0]-1;
        closeEnd = houses[houses.size()-1]- heaters[heaters.size()-1];
        if(closeStart>closeEnd){
            return closeStart;
        }
        else
            return closeEnd;
            
    }
        return 0;
    }
};
