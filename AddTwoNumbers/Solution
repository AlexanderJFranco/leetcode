/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
//Time Complexity: O(max(m,n))
//Space complexity: O(max(m,n)) (Length of new list is at most max(m,n)+1)
class Solution {
public:
ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
ListNode * l3 = new ListNode(0);
ListNode * head = l3;
bool run = true;
 while(run){
    int sum = l3->val;
    if(l1 != NULL){
          sum += l1->val;
          l1 = l1->next;
      } 
      if(l2 != NULL){
          sum += l2->val;
          l2 = l2->next;
      }
        l3->val = (sum % 10);

      if((l1 == NULL) && (l2 == NULL) && sum <10){
        run = false;
      }

     if(run == true){
        l3->next = new ListNode(sum/10);
        l3=l3->next;
     }

    }
    return head;
    }
};
