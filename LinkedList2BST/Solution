/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    TreeNode * build(ListNode * head, int left, int right){
        if(head==nullptr)
            return nullptr;
        if(left>right)
            return nullptr;
        
        int mid = (left+right) /2;
        ListNode * ptr = head;
        for(int i =0; i < mid; i++){
            ptr= ptr->next;
        }
        TreeNode * root = new TreeNode();
        root->val = ptr->val;
        root->left = build(head, left, mid -1);
        root->right = build(head, mid+1,right);
        return root;
        
    }
public:
    TreeNode* sortedListToBST(ListNode* head) {
        ListNode * slowptr = head;
        ListNode * ptr = head;
        int count =0;
        while(ptr!=nullptr){
            ptr = ptr->next;
            count++;
        }
TreeNode * root = build(head,0,count-1);
        return root;
    }
};
